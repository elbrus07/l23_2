#include <iostream>
#include <cmath>
int main(){

//1. Пользователь вводит три числа. Программа выводит максимальное из них.
/*
    int a, b, c ;

    std::cout<<"Введите три числа ";
    std::cin>>a>>b>>c;
    if (a>b && a>c) {
        std::cout<<"Максимальное число :"<< a ;
    } else if (b>a && b>c){
        std::cout<<"Максимальное число :"<< b ;
    } else if (c>b && c>a) {
        std::cout<<"Максимальное число :"<< c ;
    }
*/
//2. Пользователь вводит три числа. Если среди чисел нет нуля, то вычислить произведение, иначе вычислить сумму этих чисел
/*
    int a, b, c, s ;

    std::cout<<"Введите три числа ";
    std::cin>>a>>b>>c;
    if (a!=0 && b!=0 && c!=0) {
        s= a*b*c ;
        std::cout<<"Произведение :"<< s ;
    } else {
        s= a+b+c;
        std::cout<<"Сумма :"<< s ;
    }
*/
//3. Пользователь вводит три числа. Вывести их в порядке возрастания.
/*
    int a, b, c, min, max, mid ;

    std::cout<<"Введите три числа ";
    std::cin>>a>>b>>c;

    max = a;
    if ( b > max) max=b; 
    if ( c > max) max=c;

    min = a;
    if ( b < max) min=b; 
    if ( c < max) min=c;
    
    mid= a + b + c - max - min ;

    std::cout<<"Числа в порядке возрастания :"<< min <<" "<< mid <<" "<< max;
*/
//4. Пользователь вводит 3 числа. Программа должна проверить могут ли эти числа являться длинами сторон треугольника. Если да, то вычислить площадь треугольника, если нет, то вывести сумму этих чисел
/*    
    double a, b, c, p, s, sum ;

    std::cout<<"Введите три числа ";
    std::cin>>a>>b>>c;

    if (a+b>c && b+c>a && a+c>b) {
        p = (a + b + c)/2 ;  // Полупериметр
        s = pow((p * (p - a) * (p - b) * (p - c)),0.5);    //Формула Герона
        std::cout<<"Площадь треугольника :"<< s ;    
    
    } else{
        sum = a + b + c;
        std::cout<<"Сумма чисел:" << sum;
    }
*/
//5. Пользователь вводит три числа – коэффициенты квадратного уравнения. Программа вычисляет корни уравнения
/*    
    double a, b, c, d, x, x1, x2 ;

    std::cout<<"Введите три числа ";
    std::cin>>a>>b>>c;

     
    d= pow(b , 2) - 4 * a * c ;
    if (d < 0 ) {
        std::cout<<"Корней нет" ; 
    } else if (d == 0) {
        x=(-b)/(2*a) ;
        std::cout<<"x="<< x ;
    } else {
        x1=(-b - pow(d , 0.5)) / (2 * a) ;
        x2=(-b + pow(d , 0.5)) / (2 * a) ;
        std::cout<<"x1="<< x1 ;
        std::cout<<"x2="<< x2 ;
    }
*/
//6. Пользователь вводит координаты точки на плоскости (x,y). Определить в какой четверти или на какой оси декартовой плоскости находится точка
/*    
    int x, y ;

    std::cout<<"Введите координаты точки на плоскости ";
    std::cin>>x>>y;

    if (x > 0 && y > 0) {
        std::cout<<"первая четверть" ;
    } else if (x == 0 && y == 0) {
        std::cout<<"начало координат" ;
    } else if (x < 0 && y > 0) {
        std::cout<<"вторая четверть" ;
    } else if (x < 0 && y < 0) {
        std::cout<<"третья четверть" ;
    }  else if (x > 0 && y < 0) {
        std::cout<<"четвертая четверть" ;
    } else if (x == 0 && y != 0) {
        std::cout << "точка на оси Y";
    } else if (y == 0 && x != 0) {
        std::cout << "точка на оси X";
    }
*/
//7. Написать программу, проверяющую является ли введённое пользователем число целым или дробным
/*
    double a;

    std::cout<<"Введите  число ";
    std::cin>>a;
    if (a == int(a)) {
        std::cout << "Введенное число является целым";
        
    } else{
       std::cout << "Введенное число является дробным"; 
    }
*/
//8. Вычислить выражение . Значения x и y вводит пользователь. Перед вычислением выполнить проверку на существование квадратных корней
/*
    double x, y, result;

    std::cout << "Введите x и y: ";
    std::cin >> x >> y;
   
  

    // Проверяем, можно ли вычислить корни
    if (x >= y && y >= 0) {
        result = pow(x - y, 0.5) + pow(y, 0.5);
        std::cout << "Результат: " << result;
    } else {
        std::cout << "Невозможно вычислить т.к. под корнем отрицательное число";
    }
*/
//9. Дано пятизначное число. Занулить цифры, стоящие на четных разрядах. Например, из 123456 получается число 103050. Нумерация разрядов начинается справа.
/*   
    int number;
    
    std::cout << "Введите пятизначное число: ";
    std::cin >> number;
    
    number = number - (number / 10 % 10) * 10;        // зануляем десятки
    number = number - (number / 1000 % 10) * 1000;    // зануляем тысячи
    
    std::cout << "Результат: " << number;
*/
    return 0;
}